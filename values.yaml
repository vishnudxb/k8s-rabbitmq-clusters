## RabbitMQ application credentials
## Ref: http://rabbitmq.com/access-control.html
##
rabbitmqUsername: admin
rabbitmqPassword: E9YMkr4s2qc

## RabbitMQ Management user used for health checks
managementUsername: management
managementPassword: KUGKgkdKHb

## Place any additional key/value configuration to add to rabbitmq.conf
## Ref: https://www.rabbitmq.com/configure.html#config-items
extraConfig: |
#  queue_master_locator = min-masters

## Place advanced.config file in /etc/rabbitmq/advanced.config
## Ref: https://www.rabbitmq.com/configure.html#advanced-config-file
advancedConfig: |

## Definitions specification within the secret, will always be mounted
## at /etc/definitions/defintions.json
definitionsSource: definitions.json

## Place any additional plugins to enable in /etc/rabbitmq/enabled_plugins
## Ref: https://www.rabbitmq.com/plugins.html
extraPlugins: |
  rabbitmq_shovel,
  rabbitmq_shovel_management,
  rabbitmq_federation,
  rabbitmq_management,
  rabbitmq_auth_mechanism_ssl,
  rabbitmq_peer_discovery_k8s,
  rabbitmq_consistent_hash_exchange,
  rabbitmq_federation_management,

definitions:
  globalParameters: |-
#    {
#        "name": "cluster_name",
#        "value": "rabbitmq-ha"
#    }
  users: |-
#   {
#     "name": "myUsername",
#     "password": "myPassword",
#     "tags": "administrator"
#   }
  vhosts: |-
#   {
#     "name": "/rabbit"
#   }
  parameters: |-
#   {
#     "value": {
#       "src-uri": "amqp://localhost",
#       "src-queue": "source",
#       "dest-uri": "amqp://localhost",
#       "dest-queue": "destination",
#       "add-forward-headers": false,
#       "ack-mode": "on-confirm",
#       "delete-after": "never"
#     },
#     "vhost": "/",
#     "component": "shovel",
#     "name": "test"
#   }
  permissions: |-
#   {
#     "user": "myUsername",
#     "vhost": "/rabbit",
#     "configure": ".*",
#     "write": ".*",
#     "read": ".*"
#   }
  queues: |-
#    {
#       "name":"myName",
#       "vhost":"/rabbit",
#       "durable":true,
#       "auto_delete":false,
#       "arguments":{}
#    }
  exchanges: |-
#    {
#       "name":"myName",
#       "vhost":"/rabbit",
#       "type":"direct",
#       "durable":true,
#       "auto_delete":false,
#       "internal":false,
#       "arguments":{}
#    }
  bindings: |-
#    {
#       "source":"myName",
#       "vhost":"/rabbit",
#       "destination":"myName",
#       "destination_type":"queue",
#       "routing_key":"myKey",
#       "arguments":{}
#    }
## Sets the policies in definitions.json. This can be used to control the high
## availability of queues by mirroring them to multiple nodes.
## Ref: https://www.rabbitmq.com/ha.html
  policies: |-
    {
      "name": "ha-all",
      "pattern": ".*",
      "vhost": "/",
      "definition": {
        "ha-mode": "all",
        "ha-sync-mode": "automatic",
        "ha-sync-batch-size": 10
      }
    }

## Ref: https://www.rabbitmq.com/rabbitmqctl.8.html#force_boot
forceBoot: false

## RabbitMQ default VirtualHost
## Ref: https://www.rabbitmq.com/vhosts.html
##
rabbitmqVhost: "/"

## Erlang cookie to determine whether different nodes are allowed to communicate with each other
## Ref: https://www.rabbitmq.com/clustering.html
##
# rabbitmqErlangCookie:

## RabbitMQ Memory high watermark
## Ref: http://www.rabbitmq.com/memory.html
##
rabbitmqMemoryHighWatermark: 256MB
rabbitmqMemoryHighWatermarkType: absolute

## EPMD port for peer discovery service used by RabbitMQ nodes and CLI tools
## Ref: https://www.rabbitmq.com/clustering.html
##
rabbitmqEpmdPort: 4369

## Node port
rabbitmqNodePort: 5672

## Manager port
rabbitmqManagerPort: 15672

## Set to true to precompile parts of RabbitMQ with HiPE, a just-in-time
## compiler for Erlang. This will increase server throughput at the cost of
## increased startup time. You might see 20-50% better performance at the cost
## of a few minutes delay at startup.
rabbitmqHipeCompile: false

## SSL certificates
## Red: http://www.rabbitmq.com/ssl.html
rabbitmqCert:
  enabled: true

  # Specifies an existing secret to be used for SSL Certs
  existingSecret: ""

  ## Create a new secret using these values
  cacertfile: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkyZ0F3SUJBZ0lKQVAwQWFEQ1drcDJNTUEwR0NTcUdTSWIzRFFFQkN3VUFNREV4SURBZUJnTlYKQkFNTUYxUk1VMGRsYmxObGJHWlRhV2R1WldSMFVtOXZkRU5CTVEwd0N3WURWUVFIREFRa0pDUWtNQjRYRFRFNQpNRGd3TnpFeU5URXlPRm9YRFRJNU1EZ3dOREV5TlRFeU9Gb3dNVEVnTUI0R0ExVUVBd3dYVkV4VFIyVnVVMlZzClpsTnBaMjVsWkhSU2IyOTBRMEV4RFRBTEJnTlZCQWNNQkNRa0pDUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQ3Y4RDc5M1drenNJY1VjM1FXL09pNytNemJkNWhvc0YzZ2l3NzAzdTF3d1VRWgpwTEZ0djBDYmQ1ajlvYWJNeWxmZVVwanZ1MlZscU5nSTEyOGkyckhNQ0xKMlpaajdMWmtwZlZhQklWZldWZHNRCmtkNndUc1VCbFhLNGFTLzR1eU9SSURLS3pwbUxleStOb0EzYjlTSlpYMGVMS3FweWhVN3ZjTDZMUlBIcGd3NTQKWERqQ1dKUWIvd1JiQ3hhNjF5eUNzWlNFWG5xWUtqUEJoNWt6YWl0ZGRMZGNYWVorb2IxMWFVOEU1WmVCdGVyNApZc0xUTnE5dHplN0luSUJoMElrUlFWMEZEK0o3eHlBbng2N3lMQXlFMzVISlIrVUxpTldVVkhPZGU1eEluSDRzCjhyVU5zZW43SUZMa2ljaWdnbGMxci9LSFFqZ0xGTzNHSmpkUzByVFpBZ01CQUFHallEQmVNQXNHQTFVZER3UUUKQXdJQkJqQWRCZ05WSFE0RUZnUVVjM2IrQmZRNmVPSTFVU1ljMVlSa1RSWDN5ZlV3SHdZRFZSMGpCQmd3Rm9BVQpjM2IrQmZRNmVPSTFVU1ljMVlSa1RSWDN5ZlV3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQWhkWlBzUzRlbW1qaDh2M0ZQL3JpT0UxbDJZaG8vZExjVGExWGU3bHlpZFVyTXJkTG5TTTIKaVdXQ3I3NndLU09YMFc3d1F6YkFJOEpxM09GaGt6d2Jlb1hjWThaVkRnQzJMVm9hQmRJUGFSM2RwV3JrWVdXdgp4R2lvVmpzQnVFNlp1YjZDbXhPSUwyZVl5QVVqTUs4QXFtRmRmVDZtUkcyWG5WenJUakN3WC9NVzRYblk3TWtaCnJxQ1Bnb1BLUkc4cG1zcExTZjh6VEE0Mys0UExoNGh0Tk5wbUpDRFF1OWJjakVQclJkbTFXMjhqUHEvc1dTWkcKa3VWbUJTUXhEbXhJMzBhNDladlFXayttbElHM1dDUjdJK1ZISkNVVnFOTEJZN1VYR0FZMnFManplSG55YjRUOApRZUlkY01VN0lFKzdBRzhxUExncHBicTFOQjhlWUZJbWNRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==

  certfile: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURyVENDQXBXZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREF4TVNBd0hnWURWUVFEREJkVVRGTkgKWlc1VFpXeG1VMmxuYm1Wa2RGSnZiM1JEUVRFTk1Bc0dBMVVFQnd3RUpDUWtKREFlRncweE9UQTRNRGN4TWpVeApNamxhRncweU9UQTRNRFF4TWpVeE1qbGFNRG94SnpBbEJnTlZCQU1NSG5acGMyaHVkWE10YldKd0xUSXVZWEJoCll5NWpiM0p3YkdGdUxtNWxkREVQTUEwR0ExVUVDZ3dHYzJWeWRtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUE5NTQvVm8xbmEyRFdVQjcvTWIxZERoZlVOc0s1ZDBEQ1FycG5Md25YallTZgpWOVpkQzR2ci9VZTlIcWsxQVExZjV3cWNrSERwcnJ6Z05jbkNDMnlrbDl0SVdOazNDZzFLQUR2SDI0MTFkNmdJCkRHTStsZlRHM0ZocGtZMk5KL21QQWFtYnNRWGowNUlQbVhWK00waURpRVNSRE5lUlE1Ym5oRGhuSU1ydzExTm0KS0NYZmhZeXQ4NGMxTEhjOXlFNXJlL3RaV3lwL1Z6ZHM2Rm5KVWJTdWFEZGJwOTY5cmE2TUZBamZEVWwvVkUrOQp1MWxmTHVqWTNxNnJWc0VLUzkrZGhMTE1SSXJLdkpvdENkcjZySUo0bXlsNk5wZWpKaFVtMGsrdVpwMFJxUGV1CkJLR29VQnhaaGxFdDBlRHk0RloyTVppcjNzZDBxZ01wcEZhODRHak1MUUlEQVFBQm80SEdNSUhETUFrR0ExVWQKRXdRQ01BQXdDd1lEVlIwUEJBUURBZ1dnTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQk1GUUdBMVVkRVFSTgpNRXVDSG5acGMyaHVkWE10YldKd0xUSXVZWEJoWXk1amIzSndiR0Z1TG01bGRJSWVkbWx6YUc1MWN5MXRZbkF0Ck1pNWhjR0ZqTG1OdmNuQnNZVzR1Ym1WMGdnbHNiMk5oYkdodmMzUXdIUVlEVlIwT0JCWUVGRFZ3ckM0VGw5dmYKZUVZZG1yRGJRWTRvcFRQTE1COEdBMVVkSXdRWU1CYUFGSE4yL2dYME9uamlOVkVtSE5XRVpFMFY5OG4xTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkcrZnFvUGJBYldsc0paeTZDMG81cEN3YTcwcUErMEROdHVCT3Q0WTIvClVWYWUvTWpJNFZZNFZCK3JiZ3ZtOVQ4U2E5SmptNFZ4ek1SakdmckdWNTk3aXZXWmlUMVZPb1piMUZOZC8zbWUKSTcreng3WXJrZ3ZBZlhFdkRqUkZLMEUxc04wN3cxU2Nnb0pnb215SEdJaThHSGtKK1lVU012RFJDYm43a1gzVQp5MTR5L2JBeWwyS1dCWGtZTi9CcEtNSWh5a3JFN3FlSDNWY2NnRktWUk9PTDJYaFBQL050c1FoTnJ0ZGZwUTY5CnFqY05NNHB0S3lDeUxaVzBHZ3UxR3oyMlhKTEhIaHhIb1lmQjViU21wc09Ua011RTJHYWVKclRFWkNZUE1mQmMKSEVEY1NmTEc1OVhOdDF3L09UemQ2YXA5aUt5RlNxYytvb0EzU3NEQkNrdGYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==

  keyfile: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBOTU0L1ZvMW5hMkRXVUI3L01iMWREaGZVTnNLNWQwRENRcnBuTHduWGpZU2ZWOVpkCkM0dnIvVWU5SHFrMUFRMWY1d3Fja0hEcHJyemdOY25DQzJ5a2w5dElXTmszQ2cxS0FEdkgyNDExZDZnSURHTSsKbGZURzNGaHBrWTJOSi9tUEFhbWJzUVhqMDVJUG1YVitNMGlEaUVTUkROZVJRNWJuaERobklNcncxMU5tS0NYZgpoWXl0ODRjMUxIYzl5RTVyZS90Wld5cC9WemRzNkZuSlViU3VhRGRicDk2OXJhNk1GQWpmRFVsL1ZFKzl1MWxmCkx1alkzcTZyVnNFS1M5K2RoTExNUklyS3ZKb3RDZHI2cklKNG15bDZOcGVqSmhVbTBrK3VacDBScVBldUJLR28KVUJ4WmhsRXQwZUR5NEZaMk1aaXIzc2QwcWdNcHBGYTg0R2pNTFFJREFRQUJBb0lCQVFEdkZUNTJwWVdMcWk2RApvY29wRG52QTFjVXpNb1M4M2l3ekhhUHZTUU4xUXU1UGMwelhqenhHaTNQUkhQTnVscWxZZldoNkZtdXJLZmNhCk9EcEJxWjZxZVRHN2g4K2F4d1lDZjdZVENOeTRzZWREZnJlNU5tU2o4RUhPSmV4N0FuelAwQ0hocEp3N2RiWFcKS0JtNERuWGhwc0tlc2EweW80dmFvRk1DMksvK1ZrUUM4ektoMk5zSDExYkt3TXRXbG82elVjaFB6WUFFVVFIYQpNMTlaTytRZVFBVm1FTEgweWJQQ2Y2VXVod2w4ciszWlA4TzcweUpaOTQrS2VOUGM4UDFHM3d4c0YzOEN0MHo3CjhYRUtwRW9EcDhsY2dOOWo0TjNCb0UyeGxwd1BmSlI3ak83dDBxejYyNlFKelZlMW52a2RJOUNVTjlPUVBaTlMKRzh4cTdPcUJBb0dCQVB6QlhBdENPUGFaR0lMUytidS9jVjhSZ0dxSVJGSjd0K2VJTUdVQUdoWlVNcUVxZEgrNgpobVcveklRb3B3SzVjWk82Y2tsa1RuUWJSSUNDQXc5UUdIKzVvdHBnSCtkTXVxdGc4TG1Ra2J6ZEZoak1yWU1tCkZvbGsvVWlLWGg3aFZOUXV6T2RSenBFdk1lKzBwbVIzNE9SRHpQTDVJbXc1cG04NVNOWmwzVHdkQW9HQkFQck0KQVdLMHEvYlp6Y2huOFdZamJYVFp2K0ZVU1p3VXRSbk1GQVpOd1drWmd3cjVPQ1FFOVlNa3I0czJxY2oycGtxbgp1Tjh4Y0pQQXh2NFI1eEVLa0xHTWMxMkVrWTFjY2RTVkV0SHRNUkNCeDhGYjVEUGVmdU15TnY3WHRKalVKSVdhCndrM0hVUzE3czBDMnR2aERLZTRGL0NaU3lVcDJweEtaSlZLSyt6TlJBb0dCQUlGMEQwNTg1bXYyMFlUL3hZU1IKY3VGOE4wZFk3NVZIWkZPamZ4WGJ6WUN1TXhnMGhHSi9DQ0xJNzFpbzhaRUZwZFJCNUJNTzJ0ZkF0MzhTRjdzYQpETkl1SStpdzN1WTZlRWthWjNERFNNRndnc2JFM2dHVDJtc1lYRmx3OU8vZi9QQ0gzODZDS2NoV1liOGh5UzhmCjd3RTZjSmZwWGVZTVNPQWllTm5HWmw5SkFvR0JBTllEZ21jdGo5VTlkWW8va05LOUJxbUJLMmxvV013MUszbVIKR2NGclZ0R044TEpMaTJuSlJZeWNvS1FtaUdveWVDTWF6dnEvSUxjaytXcFQ4cDhyS2VBbzMwVjlYQXVLU0tURQpkV1BvaVVieHlIa3JKaWhSQkd4eUxGWDUwbVhjR2pKY3B0UmljdFppU2N1K1g1S3BGYjNGSTYrOFU0TVVqMnVpCmZpUGE3NU9SQW9HQUsyNk5Fcm5SbG8zNzd0ZlJNUERKeTZUbHVER0pOR2JaVHJKaHBURjAzdDVWSnRKbWhtaHgKY255M2tXaFJQcTdwckJxdndMWU1KajE3TzNXRTNTZHpZcWxDMHB2QllHeUV5VFVWekQxUWoybjlNT0pJdjlReAoxNTVSWHVadzQ3VllNVVo4N0Ezd1B6QmtjazdRZ0duMUdxdFg1dGlTT0hVUjluTFF2N1duQ0wwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==

## Extra volumes for statefulset
extraVolumes: []

## Extra volume mounts for statefulset
extraVolumeMounts: []

## Authentication mechanism
## Ref: http://www.rabbitmq.com/authentication.html
rabbitmqAuth:
  enabled: true

  config: |
     auth_mechanisms.1 = PLAIN
     auth_mechanisms.2 = AMQPLAIN
     auth_mechanisms.3 = EXTERNAL

## Automatic Partition Handling Strategy (split brain handling)
## Ref: https://www.rabbitmq.com/partitions.html#automatic-handling
## Note: pause-if-all-down is not supported without using a custom configmap since it requires extra
## configuration.

rabbitmqClusterPartitionHandling: autoheal

## Authentication backend
## Ref: https://github.com/rabbitmq/rabbitmq-auth-backend-http
rabbitmqAuthHTTP:
  enabled: false

  config: |
    # auth_backends.1 = http
    # auth_http.user_path     = http://some-server/auth/user
    # auth_http.vhost_path    = http://some-server/auth/vhost
    # auth_http.resource_path = http://some-server/auth/resource
    # auth_http.topic_path    = http://some-server/auth/topic

## LDAP Plugin
## Ref: http://www.rabbitmq.com/ldap.html
rabbitmqLDAPPlugin:
  enabled: false

  ## LDAP configuration:
  config: |
    # auth_backends.1 = ldap
    # auth_ldap.servers.1  = my-ldap-server
    # auth_ldap.user_dn_pattern = cn=${username},ou=People,dc=example,dc=com
    # auth_ldap.use_ssl    = false
    # auth_ldap.port       = 389
    # auth_ldap.log        = false

## MQTT Plugin
## Ref: http://www.rabbitmq.com/mqtt.html
rabbitmqMQTTPlugin:
  enabled: false

  ## MQTT configuration:
  config: |
    # mqtt.default_user     = guest
    # mqtt.default_pass     = guest
    # mqtt.allow_anonymous  = true

## Web MQTT Plugin
## Ref: http://www.rabbitmq.com/web-mqtt.html
rabbitmqWebMQTTPlugin:
  enabled: false

  ## Web MQTT configuration:
  config: |
    # web_mqtt.ssl.port       = 12345
    # web_mqtt.ssl.backlog    = 1024
    # web_mqtt.ssl.certfile   = /etc/cert/cacert.pem
    # web_mqtt.ssl.keyfile    = /etc/cert/cert.pem
    # web_mqtt.ssl.cacertfile = /etc/cert/key.pem
    # web_mqtt.ssl.password   = changeme

## STOMP Plugin
## Ref: http://www.rabbitmq.com/stomp.html
rabbitmqSTOMPPlugin:
  enabled: false

  ## STOMP configuration:
  config: |
    # stomp.default_user = guest
    # stomp.default_pass = guest

## Web STOMP Plugin
## Ref: http://www.rabbitmq.com/web-stomp.html
rabbitmqWebSTOMPPlugin:
  enabled: false

  ## Web STOMP configuration:
  config: |
    # web_stomp.ws_frame = binary
    # web_stomp.cowboy_opts.max_keepalive = 10

## AMQPS support
## Ref: http://www.rabbitmq.com/ssl.html
rabbitmqAmqpsSupport:
  enabled: true

  # NodePort
  amqpsNodePort: 5671

  # SSL configuration
  config: |
     listeners.ssl.default             = 5671
     ssl_options.cacertfile            = /etc/cert/cacert.pem
     ssl_options.certfile              = /etc/cert/cert.pem
     ssl_options.keyfile               = /etc/cert/key.pem
     ssl_options.verify                = verify_peer
     ssl_options.fail_if_no_peer_cert  = false

## Number of replicas
replicaCount: 3

image:
  repository: rabbitmq
  tag: 3.7.15-alpine
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistrKeySecretName

busyboxImage:
  repository: busybox
  tag: 1.30.1
  pullPolicy: IfNotPresent

## Duration in seconds the pod needs to terminate gracefully
terminationGracePeriodSeconds: 10

service:
  annotations: {}
  clusterIP: None

  ## List of IP addresses at which the service is available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs: []

  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  type: NodePort

  ## Customize nodePort number when the service type is NodePort
  ### Ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ###
  epmdNodePort: null
  amqpNodePort: null
  managerNodePort: null

podManagementPolicy: OrderedReady

## Statefulsets rolling update update strategy
## Ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#rolling-update
##
updateStrategy: OnDelete

## Statefulsets Pod Priority
## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
## priorityClassName: ""

## We usually recommend not to specify default resources and to leave this as
## a conscious choice for the user. This also increases chances charts run on
## environments with little resources, such as Minikube. If you do want to
## specify resources, uncomment the following lines, adjust them as necessary,
## and remove the curly braces after 'resources:'.
## If you decide to set the memory limit, make sure to also change the
## rabbitmqMemoryHighWatermark following the formula:
##   rabbitmqMemoryHighWatermark = 0.4 * resources.limits.memory
##
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 1Gi
  # requests:
  #   cpu: 100m
  #   memory: 1Gi
initContainer:
  resources: {}
  #   limits:
  #     cpu: 100m
  #     memory: 128Mi
  #   requests:
  #     cpu: 100m
  #     memory: 128Mi

## Additional init containers
extraInitContainers: []

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:

## Data Persistency
persistentVolume:
  enabled: true
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  name: my-volume
  storageClass: ssd
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  annotations: {}

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
##
nodeSelector: {}

## Node tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
##
tolerations: []

## Extra Annotations to be added to pod
podAnnotations: {}

## Pod affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
podAntiAffinity: soft
podAntiAffinityTopologyKey: "kubernetes.io/hostname"

## Create default configMap
##
existingConfigMap: false

## Add additional labels to all resources
##
extraLabels: {}

## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
##
rbac:
  create: true

## Service Account
## Ref: https://kubernetes.io/docs/admin/service-accounts-admin/
##
serviceAccount:
  create: true

  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  # name:

ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  path: /

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  ## hostName: foo.bar.com

  ## Set this to true in order to enable TLS on the ingress record
  tls: false

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: myTlsSecret

  ## Ingress annotations done as key:value pairs
  annotations: {}
  #  kubernetes.io/ingress.class: nginx

livenessProbe:
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6

readinessProbe:
  failureThreshold: 6
  initialDelaySeconds: 20
  timeoutSeconds: 3
  periodSeconds: 5

# Specifies an existing secret to be used for RMQ password, management user password and Erlang Cookie
existingSecret: ""


## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  fsGroup: 101
  runAsGroup: 101
  runAsNonRoot: true
  runAsUser: 100

## Sets environment variables for the rabbitmq container
env: {}

prometheus:
  ## Configures Prometheus Exporter to expose and scrape stats.
  exporter:
    enabled: false
    env: {}
    image:
      repository: kbudde/rabbitmq-exporter
      tag: v0.29.0
      pullPolicy: IfNotPresent

    ## Port Prometheus scrapes for metrics
    port: 9090
    ## Comma-separated list of extended scraping capabilities supported by the target RabbitMQ server
    capabilities: "bert,no_sort"

    ## Allow overriding of container resources
    resources: {}
     # limits:
     #   cpu: 200m
     #   memory: 1Gi
     # requests:
     #   cpu: 100m
     #   memory: 100Mi

  ## Prometheus is using Operator.  Setting to true will create Operator specific resources like ServiceMonitors and Alerts
  operator:
    ## Are you using Prometheus Operator? [Blog Post](https://coreos.com/blog/the-prometheus-operator.html)
    enabled: true

    ## Configures Alerts, which will be setup via Prometheus Operator / ConfigMaps.
    alerts:
      ## Prometheus exporter must be enabled as well
      enabled: true

      ## Selector must be configured to match Prometheus Install, defaulting to whats done by Prometheus Operator
      ## See [CoreOS Prometheus Chart](https://github.com/coreos/prometheus-operator/tree/master/helm)
      selector:
        role: alert-rules
      labels: {}

    serviceMonitor:
      ## Interval at which Prometheus scrapes RabbitMQ Exporter
      interval: 10s

      # Namespace Prometheus is installed in
      namespace: monitoring

      ## Defaults to whats used if you follow CoreOS [Prometheus Install Instructions](https://github.com/coreos/prometheus-operator/tree/master/helm#tldr)
      ## [Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/prometheus/templates/prometheus.yaml#L65)
      ## [Kube Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/kube-prometheus/values.yaml#L298)
      selector:
        prometheus: kube-prometheus

## Kubernetes Cluster Domain
clusterDomain: cluster.local

## Pod Disruption Budget
podDisruptionBudget: {}
  # maxUnavailable: 1
  # minAvailable: 1
